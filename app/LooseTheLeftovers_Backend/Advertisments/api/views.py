from django.shortcuts import render, redirect
from rest_framework.response import Response 
from rest_framework.permissions import IsAuthenticated 
from rest_framework import status
from rest_framework_simplejwt.authentication import JWTAuthentication
from rest_framework.decorators import api_view

from Advertisments.api.serializers import AdvertismentSerializer

authentication_classes = (JWTAuthentication, )
permission_classes = (IsAuthenticated, )

@api_view(['POST'])
def create_advertisment(request):
    '''
    POST request to handle creating new advertisment.

    Only logged in users can create ads so a valid JWT Access token must be included in the header. 
    After authentication AdvertismentSerializer is initiated and used in validate the fields passed 
    in the POST request and to save the new ad if valid.

    HTTP POST request requires these fields:
        - user_id (of user creating ad)
        - title
        - description
        - category
        - expiry datetime
            - expected format = 'yyyy-mm-ddThh:mm:ss:nnnnnnZ
            - example: '2013-01-29T12:34:56.000000Z'
        - image (to be implemented)

    Returns:
        - If successful, returns a HTTP response 201 and validated data from serializer used to create ad
        - If unsuccessful, returns an HTTP response 400 along with the response generated by the serializer
            or HTTP response 405 if not a POST request

    '''
    
    # deserialize incoming data
    serializer = AdvertismentSerializer(data=request.data)

    # validate data in request
    if serializer.is_valid():
        # save ad and return 201_created HTTP response
        serializer.save()
        return Response(serializer.validated_data, status=status.HTTP_201_CREATED)
    else:
        # if invalid data return 400_bad_request
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)